library(GSIF)
?spsample.prob
library(plotKML)
library(maxlike)
library(spatstat)
library(maptools)
data(eberg)
data(eberg_grid)
## existing sampling plan:
sel <- runif(nrow(eberg)) < .2
eberg.xy <- eberg[sel,c("X","Y")]
coordinates(eberg.xy) <- ~X+Y
proj4string(eberg.xy) <- CRS("+init=epsg:31467")
## covariates:
gridded(eberg_grid) <- ~x+y
proj4string(eberg_grid) <- CRS("+init=epsg:31467")
## convert to continuous independent covariates:
formulaString <- ~ PRMGEO6+DEMSRT6+TWISRT6+TIRAST6
eberg_spc <- spc(eberg_grid, formulaString)
covs <- eberg_spc@predicted[1:8]
iprob <- spsample.prob(eberg.xy, covs)
iprob <- spsample.prob(eberg.xy, covs)
## Note: obvious omission areas:
hist(iprob[[1]]@data[,1])
## compare with random sampling:
rnd <- spsample(eberg_grid, type="random",
n=length(iprob[["observations"]]))
iprob2 <- spsample.prob(rnd, covs)
## compare the two:
par(mfrow=c(1,2))
plot(raster(iprob[[1]]), zlim=c(0,1), col=SAGA_pal[[1]])
points(iprob[["observations"]])
plot(raster(iprob2[[1]]), zlim=c(0,1), col=SAGA_pal[[1]])
points(iprob2[["observations"]])
iprob <- spsample.prob(eberg.xy, covs)
??cellFromXY
library(raster)
iprob <- spsample.prob(eberg.xy, covs)
## compare with random sampling:
rnd <- spsample(eberg_grid, type="random",
n=length(iprob[["observations"]]))
iprob2 <- spsample.prob(rnd, covs)
## compare the two:
par(mfrow=c(1,2))
plot(raster(iprob[[1]]), zlim=c(0,1), col=SAGA_pal[[1]])
points(iprob[["observations"]])
plot(raster(iprob2[[1]]), zlim=c(0,1), col=SAGA_pal[[1]])
points(iprob2[["observations"]])
str(iprob)
dev.off()
plot(raster(iprob$maxlike))
plot(raster(iprob$density))
library(sp)
library(raster)
library(gstat)
library(randomForest)
library(quantregForest)
library(plotKML)
library(scales)
library(ranger)
demo(meuse, echo=FALSE)
library(geoR)
library(geoR)
leg = c("#0000ff", "#0028d7", "#0050af", "#007986", "#00a15e", "#00ca35", "#00f20d", "#1aff00", "#43ff00", "#6bff00", "#94ff00", "#bcff00", "#e5ff00", "#fff200", "#ffca00", "#ffa100", "#ff7900", "#ff5000", "#ff2800", "#ff0000")
grid.dist0 <- buffer.dist(meuse["zinc"], meuse.grid[1], as.factor(1:nrow(meuse)))
dn0 <- paste(names(grid.dist0), collapse="+")
fm0 <- as.formula(paste("zinc ~", dn0))
m0 <- fit.gstatModel(meuse, fm0, grid.dist0, method="ranger", rvgm=NULL)
rk.m0 <- predict(m0, grid.dist0)
library(GSIF)
library(sp)
library(raster)
library(gstat)
library(randomForest)
library(quantregForest)
library(plotKML)
library(scales)
library(ranger)
library(geoR)
grid.dist0 <- buffer.dist(meuse["zinc"], meuse.grid[1], as.factor(1:nrow(meuse)))
dn0 <- paste(names(grid.dist0), collapse="+")
fm0 <- as.formula(paste("zinc ~", dn0))
m0 <- fit.gstatModel(meuse, fm0, grid.dist0, method="ranger", rvgm=NULL)
rk.m0 <- predict(m0, grid.dist0)
plot(log1p(raster(rk.m0@predicted[2])), col=leg)
plot(log1p(raster(rk.m0@predicted[2])), col=leg)
plot(log1p(raster(rk.m0@predicted[2])), col=leg)
library(raster)
library(gstat)
library(randomForest)
library(quantregForest)
library(plotKML)
library(scales)
library(ranger)
library(geoR)
plot(log1p(raster(rk.m0@predicted[2])), col=leg)
spplot(rk.m0@predicted[2])
library(GSIF)
library(sp)
library(raster)
library(gstat)
library(randomForest)
library(quantregForest)
library(plotKML)
library(scales)
library(ranger)
library(geoR)
plot(log1p(raster(rk.m0@predicted[2])), col=leg)
library(GSIF)
library(sp)
library(raster)
library(gstat)
library(randomForest)
library(quantregForest)
library(plotKML)
library(scales)
library(ranger)
#library(geoR)
leg = c("#0000ff", "#0028d7", "#0050af", "#007986", "#00a15e", "#00ca35", "#00f20d", "#1aff00", "#43ff00", "#6bff00", "#94ff00", "#bcff00", "#e5ff00", "#fff200", "#ffca00", "#ffa100", "#ff7900", "#ff5000", "#ff2800", "#ff0000")
plot(log1p(raster(rk.m0@predicted[2])), col=leg)
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg)
points(meuse, pch="+")
zinc.geo <- as.geodata(meuse.ov["zinc"])
locs = meuse.grid@coords
meuse.ov <- overlay(meuse.grid, meuse)
meuse.ov <- over(meuse.grid, meuse)
meuse.ov@data <- cbind(meuse.ov@data, meuse["zinc"]@data)
meuse.ov <- over(meuse.grid, meuse)
str(meuse.ov)
meuse.ov <- over(meuse, meuse.grid)
meuse.ov@data <- cbind(meuse.ov@data, meuse["zinc"]@data)
str(meuse.ov)
meuse.ov@data <- cbind(meuse.ov@data, meuse@data)
getwd()
meuse.grid = readRDS("meuse.grid.rds")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4))
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.9,7.4))
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4))
points(meuse, pch="+")
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4))
points(meuse, pch="+")
png(file = "Fig_comparison_OK_RF_zinc.png", res = 150, width = 1650, height = 1100)
par(mfrow=c(2,1), mar=c(1,0,1,0), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4), main="geoR (krige.conv)")
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
dev.off()
png(file = "Fig_comparison_OK_RF_zinc.png", res = 150, width = 1650, height = 1100)
par(mfrow=c(1,2), mar=c(1,0,1,0), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4), main="geoR (krige.conv)")
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
dev.off()
png(file = "Fig_comparison_OK_RF_zinc.png", res = 150, width = 1750, height = 1100)
par(mfrow=c(1,2), mar=c(2,0,1,0), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4), main="geoR (krige.conv)")
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
dev.off()
par(mfrow=c(1,2), mar=c(2,0,3,0), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4), main="geoR (krige.conv)")
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
par(mfrow=c(1,2), mar=c(2,2,3,2), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4), main="geoR (krige.conv)")
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
par(mfrow=c(1,2), mar=c(2,2,3,3), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4), main="geoR (krige.conv)")
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
par(mfrow=c(1,2), mar=c(3,3,3,3), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4), main="geoR (krige.conv)")
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
png(file = "Fig_comparison_OK_RF_zinc_meuse.png", res = 150, width = 1750, height = 1100)
par(mfrow=c(1,2), mar=c(3,3,3,3), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4), main="geoR (krige.conv)")
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
dev.off()
png(file = "Fig_comparison_OK_RF_zinc_meuse.png", res = 150, width = 1750, height = 1200)
par(mfrow=c(1,2), mar=c(3,3,3,3), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4), main="geoR (krige.conv)")
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
dev.off()
png(file = "Fig_comparison_OK_RF_zinc_meuse.png", res = 200, width = 1750, height = 1200)
par(mfrow=c(1,2), mar=c(3,3,3,3), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4), main="geoR (krige.conv)")
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
dev.off()
png(file = "Fig_comparison_OK_RF_zinc_meuse.png", res = 200, width = 1750, height = 1200)
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4), main="geoR (krige.conv)")
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
dev.off()
m <- glm(zinc~log1p(dist)+ffreq, meuse, family=gaussian(link=log))
plot(m$fitted.values~m$y, asp=1)
abline(0,1)
rf <- quantregForest(x=meuse@data[,c("dist","ffreq")], y=meuse$zinc)
plot(rf$predicted~rf$y, asp=1)
abline(0,1)
meuse.grid$glm.zinc <- predict(m, meuse.grid@data, type="response")
meuse.grid$rf.zinc <- predict(rf, meuse.grid@data)[,2]
spplot(meuse.grid[c("glm.zinc","rf.zinc")], col.regions=leg)
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["glm.zinc"])), col=leg, zlim=c(4.8,7.4), main="GLM")
points(meuse, pch="+")
plot(log1p(raster(meuse.grid["rf.zinc"])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
plot(log1p(raster(meuse.grid["glm.zinc"])), col=leg, zlim=c(4.6,7.4), main="GLM")
plot(log1p(raster(meuse.grid["glm.zinc"])), col=leg, zlim=c(4.2,7.4), main="GLM")
plot(log1p(raster(meuse.grid["glm.zinc"])), col=leg, zlim=c(3.8,7.4), main="GLM")
plot(log1p(raster(meuse.grid["glm.zinc"])), col=leg, zlim=c(3.2,7.4), main="GLM")
plot(log1p(raster(meuse.grid["glm.zinc"])), col=leg, zlim=c(3.4,7.4), main="GLM")
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["glm.zinc"])), col=leg, zlim=c(3.4,7.4), main="GLM")
points(meuse, pch="+")
plot(log1p(raster(meuse.grid["rf.zinc"])), col=leg, zlim=c(3.4,7.4), main="Random Forest")
points(meuse, pch="+")
expm1(4.8)
meuse.grid$glm.zinc = ifelse(meuse.grid$glm.zinc<expm1(4.8), expm1(4.8), meuse.grid$glm.zinc)
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["glm.zinc"])), col=leg, zlim=c(4.8,7.4), main="GLM")
points(meuse, pch="+")
plot(log1p(raster(meuse.grid["rf.zinc"])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
png(file = "Fig_comparison_GLM_RF_zinc_meuse.png", res = 200, width = 1750, height = 1200)
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["glm.zinc"])), col=leg, zlim=c(4.8,7.4), main="GLM")
points(meuse, pch="+")
plot(log1p(raster(meuse.grid["rf.zinc"])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
dev.off()
png(file = "Fig_comparison_GLM_RF_zinc_meuse.png", res = 100, width = 1750, height = 1200)
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["glm.zinc"])), col=leg, zlim=c(4.8,7.4), main="GLM")
points(meuse, pch="+")
plot(log1p(raster(meuse.grid["rf.zinc"])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
dev.off()
png(file = "Fig_comparison_OK_RF_zinc_meuse.png", res = 150, width = 1750, height = 1200)
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["zinc_ok"])), col=leg, zlim=c(4.8,7.4), main="geoR (krige.conv)")
points(meuse, pch="+")
plot(log1p(raster(rk.m0@predicted[2])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
dev.off()
png(file = "Fig_comparison_GLM_RF_zinc_meuse.png", res = 150, width = 1750, height = 1200)
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(meuse.grid["glm.zinc"])), col=leg, zlim=c(4.8,7.4), main="GLM")
points(meuse, pch="+")
plot(log1p(raster(meuse.grid["rf.zinc"])), col=leg, zlim=c(4.8,7.4), main="Random Forest")
points(meuse, pch="+")
dev.off()
nl.rd <- getURL("http://spatialreference.org/ref/sr-org/6781/proj4/")
library(RCurl)
nl.rd <- getURL("http://spatialreference.org/ref/sr-org/6781/proj4/")
geul <- read.table("../geul/geul.dat", header = TRUE)
setwd("~/Documents/git/GSIF_tutorials/geul")
geul <- read.table("geul.dat", header = TRUE)
coordinates(geul) <- ~x+y
proj4string(geul) <- CRS(nl.rd)
grd25 <- readGDAL("dem25.txt")
library(rgdal)
grd25 <- readGDAL("dem25.txt")
hist(geul$pb)
str(geul)
geul <- read.table("geul.dat", header = TRUE, as.is = TRUE)
geul$pb = as.numeric(geul$pb)
coordinates(geul) <- ~x+y
proj4string(geul) <- CRS(nl.rd)
grd25 <- readGDAL("dem25.txt")
hist(geul$pb)
pb.geo <- as.geodata(geul["pb"])
pb.vgm <- likfit(pb.geo, lambda=0, messages=FALSE, ini=c(var(log1p(pb.geo$data)),500), cov.model="exponential")
grd25 <- as(grd25, "SpatialPixelsDataFrame")
pb.geo <- as.geodata(geul["pb"])
getwd()
grd25 = readRDS("grd25.rds")
grid.dist1 <- buffer.dist(geul["pb"], grd25[1], as.factor(1:nrow(geul)))
geul <- read.table("geul.dat", header = TRUE, as.is = TRUE)
geul$pb = as.numeric(geul$pb)
geul = geul[!is.na(geul$pb),]
coordinates(geul) <- ~x+y
proj4string(geul) <- CRS(nl.rd)
grd25 <- readGDAL("dem25.txt")
grd25 <- as(grd25, "SpatialPixelsDataFrame")
grid.dist1 <- buffer.dist(geul["pb"], grd25[1], as.factor(1:nrow(geul)))
plot(geul["pb"])
spplot(grd25[1])
points(geul)
plot(raster(grd25[1]))
points(geul)
ov.geul = over(geul["pb"], grd25)
proj4string(grd25) = proj4string(geul)
ov.geul = over(geul["pb"], grd25)
str(ov.geul)
grid.dist1 <- buffer.dist(geul[!is.na(ov.geul$band1),"pb"], grd25[1], as.factor(1:nrow(geul)))
str(geul[!is.na(ov.geul$band1),"pb"])
summary(ov.geul$band1)
geul.s = geul[!is.na(ov.geul$band1),"pb"]
grid.dist1 <- buffer.dist(geul.s, grd25[1], as.factor(1:nrow(geul.s)))
dn1 <- paste(names(grid.dist1), collapse="+")
fm1 <- as.formula(paste("pb ~", dn1))
m1 <- fit.gstatModel(geul.s, fm1, grid.dist1, method="ranger", rvgm=NULL)
rk.m1 <- predict(m1, grid.dist1)
plot(log1p(raster(grd25["pb_ok"])), col=leg, main="geoR (krige.conv)")
grd25 = readRDS("grd25.rds")
proj4string(grd25) = proj4string(geul)
plot(log1p(raster(grd25["pb_ok"])), col=leg, main="geoR (krige.conv)")
points(geul, pch="+")
plot(log1p(raster(grd25["pb_ok"])), col=leg, , zlim=c(3.2,6.6), main="geoR (krige.conv)")
points(geul, pch="+")
points(geul, pch="+")
plot(log1p(raster(rk.m1@predicted[2])), col=leg, zlim=c(3.2,6.6), main="Random Forest")
points(geul, pch="+")
png(file = "Fig_comparison_OK_RF_zinc_Geul.png", res = 150, width = 1750, height = 1200)
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(grd25["pb_ok"])), col=leg, , zlim=c(3.2,6.6), main="geoR (krige.conv)")
points(geul.s, pch="+")
plot(log1p(raster(rk.m1@predicted[2])), col=leg, zlim=c(3.2,6.6), main="Random Forest")
points(geul.s, pch="+")
dev.off()
grd25$swi <- readGDAL("swi.sdat")$band1[grd25@grid.index]
plot(stack(grd25))
grd25$dis <- readGDAL("riverdist.txt")$band1
grd25$dis <- readGDAL("riverdist.txt")$band1[grd25@grid.index]
plot(stack(grd25))
grd25.spc <- spc(grd25, ~ band1+dis+swi)
grd25T <- grd25[c("band1","swi","dis")]
grd25T@data <- cbind(grd25T@data, grid.dist1@data)
grd25.spc <- spc(grd25, as.formula(paste("~", paste(names(grd25T), collapse = "+"))))
grd25.spc <- spc(grd25T, as.formula(paste("~", paste(names(grd25T), collapse = "+"))))
plot(stack(grd25.spc@predicted))
fm1 <- as.formula(paste("pb ~", paste(grd25.spc@predicted, collapse = "+")))
fm1 <- as.formula(paste("pb ~", paste(names(grd25.spc@predicted), collapse = "+")))
fm1
m1 <- fit.gstatModel(geul.s, fm1, grd25.spc@predicted, method="quantregForest", rvgm=NULL)
plot(m1)
rk.m1 <- predict(m1, grd25.spc@predicted)
plot(rk.m1)
m1 <- fit.gstatModel(geul.s, fm1, grd25.spc@predicted, method="quantregForest")
plot(m1)
rk.m1 <- predict(m1, grd25.spc@predicted)
plot(rk.m1)
plot(rk.m1, col=leg)
varImpPlot(m1@regModel)
plot(stack(grd25.spc@predicted[1:6]))
plot(rk.m1, col=leg)
varImpPlot(m1@regModel)
fm2 <- as.formula(paste("pb ~", paste(names(grd25.spc@predicted), collapse = "+")))
m2 <- fit.gstatModel(geul.s, fm2, grd25.spc@predicted, method="quantregForest")
rk.m2 <- predict(m2, grd25.spc@predicted)
m2 <- fit.gstatModel(geul.s, fm2, grd25.spc@predicted, method="quantregForest", rvgm=NULL)
plot(m2)
rk.m2 <- predict(m2, grd25.spc@predicted)
fm1 <- as.formula(paste("pb ~", dn1))
m1 <- fit.gstatModel(geul.s, fm1, grid.dist1, method="ranger", rvgm=NULL)
rk.m1 <- predict(m1, grid.dist1)
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(rk.m2@predicted[2])), col=leg, , zlim=c(3.2,6.6), main="Random Forest + covs")
points(geul.s, pch="+")
plot(log1p(raster(rk.m1@predicted[2])), col=leg, zlim=c(3.2,6.6), main="Random Forest")
points(geul.s, pch="+")
png(file = "Fig_comparison_RF_covariates_Pb_Geul.png", res = 150, width = 1750, height = 1200)
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(rk.m2@predicted[2])), col=leg, , zlim=c(3.2,6.6), main="Random Forest + covs")
points(geul.s, pch="+")
plot(log1p(raster(rk.m1@predicted[2])), col=leg, zlim=c(3.2,6.6), main="Random Forest")
points(geul.s, pch="+")
dev.off()
summary(grd25$pb_ok)
summary(log1p(grd25$pb_ok))
grd25$pb_ok = ifelse(grd25$pb_ok<expm1(4.2), expm1(4.2), grd25$pb_ok)
plot(log1p(raster(grd25["pb_ok"])), col=leg, , zlim=c(4.2,6.6), main="geoR (krige.conv)")
points(geul.s, pch="+")
plot(log1p(raster(rk.m1@predicted[2])), col=leg, zlim=c(4.2,6.6), main="Random Forest")
points(geul.s, pch="+")
png(file = "Fig_comparison_OK_RF_zinc_Geul.png", res = 150, width = 1750, height = 1200)
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(grd25["pb_ok"])), col=leg, , zlim=c(4.2,6.6), main="geoR (krige.conv)")
points(geul.s, pch="+")
plot(log1p(raster(rk.m1@predicted[2])), col=leg, zlim=c(4.2,6.6), main="Random Forest")
points(geul.s, pch="+")
dev.off()
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(rk.m2@predicted[2])), col=leg, , zlim=c(4.2,6.6), main="Random Forest + covs")
points(geul.s, pch="+")
plot(log1p(raster(rk.m1@predicted[2])), col=leg, zlim=c(4.2,6.6), main="Random Forest")
points(geul.s, pch="+")
rk.m2@predicted$pb = ifelse(rk.m2@predicted$pb<expm1(4.2), expm1(4.2), rk.m2@predicted$pb)
plot(log1p(raster(rk.m2@predicted[2])), col=leg, , zlim=c(4.2,6.6), main="Random Forest + covs")
points(geul.s, pch="+")
plot(log1p(raster(rk.m1@predicted[2])), col=leg, zlim=c(4.2,6.6), main="Random Forest")
points(geul.s, pch="+")
png(file = "Fig_comparison_RF_covariates_Pb_Geul.png", res = 150, width = 1750, height = 1200)
par(mfrow=c(1,2), oma=c(0,0,0,0))
plot(log1p(raster(rk.m2@predicted[2])), col=leg, , zlim=c(4.2,6.6), main="Random Forest + covs")
points(geul.s, pch="+")
plot(log1p(raster(rk.m1@predicted[2])), col=leg, zlim=c(4.2,6.6), main="Random Forest")
points(geul.s, pch="+")
dev.off()
data(eberg)
eberg <- eberg[runif(nrow(eberg))<.1,]
coordinates(eberg) <- ~X+Y
proj4string(eberg) <- CRS("+init=epsg:31467")
data(eberg_grid)
gridded(eberg_grid) <- ~x+y
proj4string(eberg_grid) <- CRS("+init=epsg:31467")
soiltype <- autopredict(eberg["soiltype"], eberg_grid, auto.plot=FALSE)
plot(stack(soiltype$predicted), col=leg)
names(SAGA_pal)
plot(stack(soiltype$predicted), col=SAGA_pal["SG_COLORS_YELLOW_RED"], zlim=c(0,40))
plot(stack(soiltype$predicted), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,40))
plot(stack(soiltype$predicted), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,60))
points(eberg)
points(eberg, pch="+")
plot(stack(soiltype$predicted), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,100))
points(eberg, pch="+")
plot(raster(soiltype$predicted["G"]), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,40))
r.G = soiltype$predicted["G"]
r.G$G = ifelse(r.G$G>40, 40, r.G)
r.G$G = ifelse(r.G$G>40, 40, r.G$G)
plot(raster(r.G), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,40))
dev.off()
plot(stack(soiltype$predicted), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,100))
plot(raster(r.G), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,40))
points(eberg, pch="+")
data(eberg)
eberg <- eberg[runif(nrow(eberg))<.3,]
coordinates(eberg) <- ~X+Y
proj4string(eberg) <- CRS("+init=epsg:31467")
data(eberg_grid)
gridded(eberg_grid) <- ~x+y
proj4string(eberg_grid) <- CRS("+init=epsg:31467")
soiltype <- autopredict(eberg["soiltype"], eberg_grid, auto.plot=FALSE)
plot(stack(soiltype$predicted), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,100))
r.G = soiltype$predicted["G"]
r.G$G = ifelse(r.G$G>40, 40, r.G$G)
plot(raster(r.G), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,40))
plot(raster(r.G), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,40))
points(eberg[eberg$soiltype=="G",], pch="o")
data(eberg)
eberg <- eberg[runif(nrow(eberg))<.3,]
coordinates(eberg) <- ~X+Y
proj4string(eberg) <- CRS("+init=epsg:31467")
eberg = eberg[!is.na(eberg$soiltype),]
points(eberg[eberg$soiltype=="G",], pch="o")
plot(raster(r.G), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,40))
points(eberg[eberg$soiltype=="G",], pch="1")
points(eberg[!eberg$soiltype=="G",], pch="0")
plot(raster(r.G), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,40))
points(eberg[eberg$soiltype=="G",], pch="1")
points(eberg[!eberg$soiltype=="G",], pch="*")
plot(raster(r.G), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,40))
points(eberg[eberg$soiltype=="G",], pch=21)
points(eberg[eberg$soiltype=="G",], pch=19)
points(eberg[!eberg$soiltype=="G",], pch="+")
data(eberg)
eberg <- eberg[runif(nrow(eberg))<.3,]
coordinates(eberg) <- ~X+Y
proj4string(eberg) <- CRS("+init=epsg:31467")
eberg = eberg[!is.na(eberg$soiltype),]
data(eberg_grid)
gridded(eberg_grid) <- ~x+y
proj4string(eberg_grid) <- CRS("+init=epsg:31467")
## predict soil types:
soiltype <- autopredict(eberg["soiltype"], eberg_grid, auto.plot=FALSE)
plot(stack(soiltype$predicted), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,100))
r.G = soiltype$predicted["G"]
r.G$G = ifelse(r.G$G>40, 40, r.G$G)
plot(raster(r.G), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,40))
points(eberg[eberg$soiltype=="G",], pch=19)
points(eberg[!eberg$soiltype=="G",], pch="+")
r.D = soiltype$predicted["D"]
r.D$D = ifelse(r.D$D>40, 40, r.G$D)
r.D$D = ifelse(r.D$D>40, 40, r.D$D)
plot(raster(r.D), col=SAGA_pal[["SG_COLORS_YELLOW_RED"]], zlim=c(0,40))
points(eberg[eberg$soiltype=="D",], pch=19)
points(eberg[!eberg$soiltype=="D",], pch="+")
