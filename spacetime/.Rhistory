library(sp)
lat = 37.423156
lon = -122.084917
name = "Google headquarters"
pnt = data.frame(name, lat, lon)
coordinates(pnt) <- ~lon+lat
proj4string(pnt) <- CRS("+proj=longlat +datum=WGS84")
pnt
str(pnt, max.level=2)
library(XML)
pnt.kml <- newXMLNode("kml")
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "Google headquarters", parent = h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- sprintf('<Placemark><Point><coordinates>
    %.5f,%.5f,%.0f</coordinates></Point></Placemark>',
    coordinates(pnt)[,1], coordinates(pnt)[,2], rep(0, length(pnt)))
parseXMLAndAdd(txtc, parent = h4)
pnt.kml
saveXML(pnt.kml, "pnt.kml")
lat = c(-122.08634, -122.08648, -122.08120, -122.08119, -122.08634)
lon = c(37.42324, 37.42118, 37.42084, 37.42309, 37.42324)
coords <- as.matrix(data.frame(lat, lon))
coords
pol <- Polygons(list(Polygon(coords, hole=as.logical(NA))), ID=name)
pol <- SpatialPolygons(list(pol),
    proj4string = CRS("+proj=longlat +datum=WGS84"))
pol
pol.kml <- newXMLNode("kml")
h2 <- newXMLNode("Document", parent = pol.kml)
h3 <- newXMLNode("name", "Google headquarters", parent = h2)
h4 <- newXMLNode("Folder", parent=pol.kml[["Document"]])
coords_kml <- paste(coords[,1], ',', coords[,2], ',', rep(0, nrow(coords)),
    collapse='\n ', sep = "")
txtc <- sprintf('<Placemark><Polygon><tessellate>1</tessellate>
    <outerBoundaryIs><LinearRing>
    <coordinates>%s</coordinates>
    </LinearRing></outerBoundaryIs></Polygon></Placemark>',  coords_kml)
parseXMLAndAdd(txtc, parent = h4)
pol.kml
library(plotKML)
data(LST)
coordinates(LST) <- ~x+y
str(LST)
coordinates(LST) <- ~lon+lat
gridded(LST) <- TRUE
LST
str(LST)
proj4string(LST) <- CRS("+proj=longlat +datum=WGS84")
dates <- sapply(strsplit(names(LST), "LST"), function(x){x[[2]]})
LST <- brick(LST)
library(raster)
LST <- brick(LST)
LST@title = "Time series of MODIS LST (8-day mosaics) images"
LST <- setZ(LST, format(as.Date(dates, "%Y_%m_%d"), "%Y-%m-%dT%H:%M:%SZ"))
LST@layernames[1:2]
names(LST)
class(LST)
slotNames(LST)
data(HRtemp08)
names(HRtemp08)
HRtemp08[1,]
p1 = newXMLNode("Placemark")
begin <- format(HRtemp08[1,"DATE"]-.5, "%Y-%m-%dT%H:%M:%SZ")
end <- format(HRtemp08[1,"DATE"]+.5, "%Y-%m-%dT%H:%M:%SZ")
txt <- sprintf('<name>%s</name><TimeStamp><begin>%s</begin>
    <end>%s</end></TimeStamp><Point>
    <coordinates>%.4f,%.4f,%.0f</coordinates></Point>',
    HRtemp08[1,"NAME"], begin, end, HRtemp08[1,"Lon"],
    HRtemp08[1,"Lat"], 0)
parseXMLAndAdd(txt, parent=p1)
p1
?plotKML
HRtemp08$ctime <- as.POSIXct(HRtemp08$DATE, format="%Y-%m-%dT%H:%M:%SZ")
sp <- SpatialPoints(HRtemp08[,c("Lon","Lat")])
proj4string(sp) <- CRS("+proj=longlat +datum=WGS84")
HRtemp08.st <- STIDF(sp, time = HRtemp08$ctime, data = HRtemp08[,c("NAME","TEMP")])
library(spacetime)
HRtemp08.st <- STIDF(sp, time = HRtemp08$ctime, data = HRtemp08[,c("NAME","TEMP")])
HRtemp08_jan <- HRtemp08.st[1:500]
str(HRtemp08_jan)
library(stpp)
data(fmd)
fmd0  <- data.frame(fmd)
coordinates(fmd0) <- c("X", "Y")
proj4string(fmd0) <- CRS("+init=epsg:27700")
fmd_sp <- as(fmd0, "SpatialPoints")
dates <- as.Date("2001-02-18")+fmd0$ReportedDay
library(spacetime)
timeIsInterval(dates) <- FALSE
fmd_ST <- STIDF(fmd_sp, dates, data.frame(ReportedDay=fmd0$ReportedDay))
plotKML(fmd_ST, kmz=TRUE)
library(fossil)
library(spacetime)
library(adehabitat)
data(gpxbtour)
gpxbtour$ctime <- as.POSIXct(gpxbtour$time, format="%Y-%m-%dT%H:%M:%SZ")
coordinates(gpxbtour) <- ~lon+lat
proj4string(gpxbtour) <- CRS("+proj=longlat +datum=WGS84")
xy <- as.list(data.frame(t(coordinates(gpxbtour))))
gpxbtour$dist.km <- sapply(xy, function(x) { 
  deg.dist(long1=x[1], lat1=x[2], long2=xy[[1]][1], lat2=xy[[1]][2]) 
} )
gpx.ltraj <- as.ltraj(coordinates(gpxbtour), gpxbtour$ctime, id = "th")
gpx.st <- as(gpx.ltraj, "STTDF")
gpx.st$speed <- gpxbtour$speed
gpx.st@sp@proj4string <- CRS("+proj=longlat +datum=WGS84")
str(gpx.st)
plotKML(gpx.st, colour="speed", kmz=TRUE)
q()
library(sp)
lat = 37.423156
lon = -122.084917
name = "Google headquarters"
pnt = data.frame(name, lat, lon)
pnt
View(pnt)
coordinates(pnt) <- ~lon+lat
pnt
str(pnt)
proj4string(pnt) <- CRS("+proj=longlat +datum=WGS84")
pnt
str(pnt, max.level=2)
pnt@bbox
pnt@proj4string
str(pnt)
library(XML)
pnt.kml <- newXMLNode("kml")
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "Google headquarters", parent = h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- sprintf('<Placemark><Point><coordinates>
    %.5f,%.5f,%.0f</coordinates></Point></Placemark>',
    coordinates(pnt)[,1], coordinates(pnt)[,2], rep(0, length(pnt)))
parseXMLAndAdd(txtc, parent = h4)
pnt.kml
str(pnt)
pnt@bbox
saveXML(pnt.kml, "pnt.kml")
writeOGR(pnt, "pnt.shp", ".", "ESRI Shapefile")
library(rgdal)
writeOGR(pnt, "pnt.shp", ".", "ESRI Shapefile")
lat = c(-122.08634, -122.08648, -122.08120, -122.08119, -122.08634)
lon = c(37.42324, 37.42118, 37.42084, 37.42309, 37.42324)
coords <- as.matrix(data.frame(lat, lon))
coords
pol <- Polygons(list(Polygon(coords, hole=as.logical(NA))), ID=name)
pol
pol <- SpatialPolygons(list(pol), proj4string = CRS("+proj=longlat +datum=WGS84"))
pol
pol.kml <- newXMLNode("kml")
h2 <- newXMLNode("Document", parent = pol.kml)
h3 <- newXMLNode("name", "Google headquarters", parent = h2)
h4 <- newXMLNode("Folder", parent=pol.kml[["Document"]])
coords_kml <- paste(coords[,1], ',', coords[,2], ',', rep(0, nrow(coords)),
    collapse='\n ', sep = "")
txtc <- sprintf('<Placemark><Polygon><tessellate>1</tessellate>
    <outerBoundaryIs><LinearRing>
    <coordinates>%s</coordinates>
    </LinearRing></outerBoundaryIs></Polygon></Placemark>',  coords_kml)
parseXMLAndAdd(txtc, parent = h4)
pol.kml
saveXML(pol.kml, "pol.kml")
library(plotKML)
library(raster)
data(LST)
coordinates(LST) <- ~lon+lat
data(LST)
View(LST)
coordinates(LST) <- ~lon+lat
str(LST)
gridded(LST) <- TRUE
proj4string(LST) <- CRS("+proj=longlat +datum=WGS84")
dates <- sapply(strsplit(names(LST), "LST"), function(x){x[[2]]})
str(LST)
LST <- brick(LST)
str(LST)
LST@title = "Time series of MODIS LST (8-day mosaics) images"
LST <- setZ(LST, format(as.Date(dates, "%Y_%m_%d"), "%Y-%m-%dT%H:%M:%SZ"))
names(LST)
class(LST)
slotNames(LST)
data(HRtemp08)
?HRtemp08
str(HRtemp08)
names(HRtemp08)
HRtemp08[1,]
p1 = newXMLNode("Placemark")
begin <- format(HRtemp08[1,"DATE"]-.5, "%Y-%m-%dT%H:%M:%SZ")
end <- format(HRtemp08[1,"DATE"]+.5, "%Y-%m-%dT%H:%M:%SZ")
txt <- sprintf('<name>%s</name><TimeStamp><begin>%s</begin>
    <end>%s</end></TimeStamp><Point>
    <coordinates>%.4f,%.4f,%.0f</coordinates></Point>',
    HRtemp08[1,"NAME"], begin, end, HRtemp08[1,"Lon"],
    HRtemp08[1,"Lat"], 0)
parseXMLAndAdd(txt, parent=p1)
p1
saveXML(p1, "p1.kml")
library(spacetime)
HRtemp08$ctime <- as.POSIXct(HRtemp08$DATE, format="%Y-%m-%dT%H:%M:%SZ")
sp <- SpatialPoints(HRtemp08[,c("Lon","Lat")])
proj4string(sp) <- CRS("+proj=longlat +datum=WGS84")
HRtemp08.st <- STIDF(sp, time = HRtemp08$ctime, data = HRtemp08[,c("NAME","TEMP")])
HRtemp08$ctime[1:5]
HRtemp08_jan <- HRtemp08.st[1:500]
str(HRtemp08_jan)
plotKML(HRtemp08_jan[,,"TEMP"], dtime = 24*3600, LabelScale = .4)
plotKML(HRtemp08.st, dtime = 24*3600, LabelScale = .4)
library(fossil)
library(spacetime)
library(adehabitat)
data(gpxbtour)
str(gpxbtour)
gpxbtour$ctime <- as.POSIXct(gpxbtour$time, format="%Y-%m-%dT%H:%M:%SZ")
coordinates(gpxbtour) <- ~lon+lat
proj4string(gpxbtour) <- CRS("+proj=longlat +datum=WGS84")
xy <- as.list(data.frame(t(coordinates(gpxbtour))))
gpxbtour$dist.km <- sapply(xy, function(x) { 
  deg.dist(long1=x[1], lat1=x[2], long2=xy[[1]][1], lat2=xy[[1]][2]) 
} )
gpx.ltraj <- as.ltraj(coordinates(gpxbtour), gpxbtour$ctime, id = "th")
gpx.st <- as(gpx.ltraj, "STTDF")
gpx.st$speed <- gpxbtour$speed
gpx.st@sp@proj4string <- CRS("+proj=longlat +datum=WGS84")
str(gpx.st)
plotKML(gpx.st, colour="speed", kmz=TRUE)
library(stpp)
data(fmd)
fmd0  <- data.frame(fmd)
coordinates(fmd0) <- c("X", "Y")
proj4string(fmd0) <- CRS("+init=epsg:27700")
fmd_sp <- as(fmd0, "SpatialPoints")
dates <- as.Date("2001-02-18")+fmd0$ReportedDay
library(spacetime)
fmd_ST <- STIDF(fmd_sp, dates, data.frame(ReportedDay=fmd0$ReportedDay))
plotKML(fmd_ST, kmz=TRUE)
data(SAGA_pal)
plotKML(fmd_ST, kmz=TRUE, colour_scale=SAGA_pal[[1]])
?kml
data(LST)
coordinates(LST) <- ~lon+lat
gridded(LST) <- TRUE
proj4string(LST) <- CRS("+proj=longlat +datum=WGS84")
str(LST)
?plotKML
library(raster)
library(sp)
data(LST)
gridded(LST) <- ~lon+lat
proj4string(LST) <- CRS("+proj=longlat +datum=WGS84")
dates <- sapply(strsplit(names(LST), "LST"), function(x){x[[2]]})
datesf <- format(as.Date(dates, "%Y_%m_%d"), "%Y-%m-%dT%H:%M:%SZ")
TimeSpan.begin = as.POSIXct(unclass(as.POSIXct(datesf))-4*24*60*60, origin="1970-01-01") 
TimeSpan.end = as.POSIXct(unclass(as.POSIXct(datesf))+4*24*60*60, origin="1970-01-01")
pnts <- HRtemp08[which(HRtemp08$NAME=="Pazin")[1],]
pnts <- rbind(pnts, HRtemp08[which(HRtemp08$NAME=="Crni Lug - NP Risnjak")[1],])
pnts <- rbind(pnts, HRtemp08[which(HRtemp08$NAME=="Cres")[1],])
coordinates(pnts) <- ~Lon + Lat
proj4string(pnts) <- CRS("+proj=longlat +datum=WGS84")
LST_ll <- brick(LST[1:5])
LST_ll@title = "Time series of MODIS Land Surface Temperature (8-day mosaics) images"
LST.ts <- new("RasterBrickTimeSeries", variable = "LST", sampled = pnts, 
    rasters = LST_ll, TimeSpan.begin = TimeSpan.begin[1:5], TimeSpan.end = TimeSpan.end[1:5])
data(SAGA_pal)
plotKML(LST.ts, colour_scale=SAGA_pal[[1]])
LST_ll <- brick(LST[1:25])
LST_ll@title = "Time series of MODIS Land Surface Temperature (8-day mosaics) images"
LST.ts <- new("RasterBrickTimeSeries", variable = "LST", sampled = pnts, 
    rasters = LST_ll, TimeSpan.begin = TimeSpan.begin[1:5], TimeSpan.end = TimeSpan.end[1:5])
LST.ts <- new("RasterBrickTimeSeries", variable = "LST", sampled = pnts, 
    rasters = LST_ll, TimeSpan.begin = TimeSpan.begin[1:25], TimeSpan.end = TimeSpan.end[1:25])
data(SAGA_pal)
plotKML(LST.ts, colour_scale=SAGA_pal[[1]])
data(LST)
coordinates(LST) <- ~lon+lat
gridded(LST) <- TRUE
proj4string(LST) <- CRS("+proj=longlat +datum=WGS84")
ncol(LST)
j=1
paste(names(LST), ".sdat", sep="")
paste(names(LST)[j], ".sdat", sep="")
for(j in 1:ncol(LST)){ writeGDAL(LST[j], paste(names(LST)[j], ".sdat", sep=""), driver="SAGA", mvFlag=-99999) }
?list.files
grd.lst <- list.files(pattern="LST*")
grd.lst
grd.lst <- list.files(pattern="LST*.sgrd")
grd.lst
grd.lst <- list.files(pattern="LST*sgrd")
grd.lst
grd.lst <- list.files(pattern=glob2rx("LST*.sgrd"))
grd.lst
library(RSAGA)
?rsaga.geoprocessor
rsaga.get.modules("geostatistics_grid")
rsaga.get.usage("geostatistics_grid", 4)
paste(grd.lst, collapse=";", sep="")
rsaga.geoprocessor(lib="geostatistics_grid", module=4, param=list(GRIDS=paste(grd.lst, collapse=";", sep=""), STDDEV="LST_sd.sgrd"))
LST$sd <- readGDAL("LST_sd.sdat")$band1
str(LST)
LST$s.d. <- readGDAL("LST_sd.sdat")$band1[LST@grid.index]
kml(LST, colour=s.d., colour_scale=SAGA_pal[[1]])
LST@grid
LST@grid@cells.dim
kml(LST, colour=s.d., colour_scale=SAGA_pal[[1]], png.width=LST@grid@cells.dim[1]*5, png.height=LST@grid@cells.dim[1]*5)
q()
data(LST)
coordinates(LST) <- ~lon+lat
library(plotKML)
data(LST)
coordinates(LST) <- ~lon+lat
library(sp)
coordinates(LST) <- ~lon+lat
gridded(LST) <- TRUE
proj4string(LST) <- CRS("+proj=longlat +datum=WGS84")
LST@grid@cells.dim
LSTb <- brick(LST)
library(raster)
LSTb <- brick(LST)
class(LSTb)
slotNames(LSTb)
?raster
LST.sd <- cellStats(LSTb, 'sd')
str(LST.sd)
cellStats(LSTb, 'sd')
signif(cellStats(LSTb, 'sd'), 3)
LST.sd <- sd(LSTb)
LST.sd <- calc(LSTb, sd)
str(LST.sd)
plot(LST.sd)
image(LST.sd)
q()
