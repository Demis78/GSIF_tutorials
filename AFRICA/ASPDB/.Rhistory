library(aqp)
library(GSIF)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
save.image("D:\\SPDB\\Africa\\.RData")
library(plotKML)
afsp.df <- as.data.frame(afsp.spc)
write.csv(afsp.df, file="afsp.csv")
coordinates(afsp.df) <- ~ LONWGS84 + LATWGS84
proj4string(afsp.df) <- "+proj=latlong +datum=WGS84"
shape = "http://maps.google.com/mapfiles/kml/pal2/icon18.png"
str(afsp.df[1:100,])
kml(afsp.df[1:500,], file = "afsp_MCOMNS.kml", colour = afsp.df$m_color_A, shape = shape, labels = "", size = ORCDRC_A)
kml(afsp.df[1:500,], file = "afsp_ORCDRC_A.kml", colour = afsp.df$m_color_A[1:500], shape = shape, labels = "", size = ORCDRC_A)
kml(afsp.df[1:200,], file = "afsp_ORCDRC_A.kml", colour = rgb2kml(afsp.df$m_color_A[1:200]), shape = shape, labels = ORCDRC_A, size = ORCDRC_A)
kml(afsp.df[1:200,], file = "afsp_ORCDRC_A.kml", colour = col2kml(afsp.df$m_color_A[1:200]), shape = shape, labels = ORCDRC_A, size = ORCDRC_A)
col2kml(afsp.df$m_color_A[1:200])
srt(Munsell.rgb)
str(Munsell.rgb)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
Munsell.rgb <- Munsell.rgb[order(Munsell.rgb$index),]
str(Munsell.rgb)
afsp.spc@horizons$m_color <- rgb(red=Munsell.rgb$R, green=Munsell.rgb$G, blue=Munsell.rgb$B, maxColorValue = 255)
afsp.df <- as.data.frame(afsp.spc)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
col2kml(afsp.df$m_color_A[1:200])
kml(afsp.df[1:200,], file = "afsp_ORCDRC_A.kml", colour = hex2kml(afsp.df$m_color_A[1:200]), shape = shape, labels = ORCDRC_A, size = ORCDRC_A)
hex2kml(afsp.df$m_color_A[1:200])
afsp.df$m_color_A[1:200]
kml(afsp.df[1:200,], file = "afsp_ORCDRC_A.kml", colour = afsp.df$m_color_A[1:200], shape = shape, labels = ORCDRC_A, size = ORCDRC_A)
kml(afsp.df[1:200,], file = "afsp_ORCDRC_A.kml", colours = afsp.df$m_color_A[1:200], shape = shape, labels = ORCDRC_A, size = ORCDRC_A)
kml(afsp.df[1:200,], file = "afsp_ORCDRC_A.kml", colours = hex2kml(afsp.df$m_color_A[1:200]), shape = shape, labels = ORCDRC_A, size = ORCDRC_A)
kml(afsp.df[1:200,], file = "afsp_ORCDRC_A.kml", colour = ORCDRC_A, shape = shape, labels = ORCDRC_A, size = ORCDRC_A)
kml(afsp.df[1:1000,], file = "afsp_ORCDRC_A.kml", colour = ORCDRC_A, shape = shape, labels = ORCDRC_A, size = ORCDRC_A)
kml(afsp.df[1:100,], file = "afsp_ORCDRC_A.kml", colour = ORCDRC_A, shape = shape, labels = ORCDRC_A, size = ORCDRC_A)
library(plotKML)
kml(afsp.df[,"ORCDRC_A"], file = "afsp_ORCDRC_A.kml", colour = ORCDRC_A, shape = shape, labels = ORCDRC_A, size = ORCDRC_A)
kml(afsp.df[,"ORCDRC_A"], file = "afsp_ORCDRC_A.kml", colour = ORCDRC_A, shape = shape, labels = ORCDRC_A, size = log1p(ORCDRC_A))
data(afsp)
?spm
?pm
CRS(get("ref_CRS", envir = plotKML.opts))
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
require(aqp)
# sample profile from Nigeria:
lon = 3.90; lat = 7.50; time = as.POSIXct("1978", format="%Y"); id = "ISRIC:NG0017"; TAXNFAO8 = "LXp" 
top = c(0, 18, 36, 65, 87, 127) 
bottom = c(18, 36, 65, 87, 127, 181)
ORCDRC = c(18.4, 4.4, 3.6, 3.6, 3.2, 1.2)
methodid = c("TAXNFAO8", "ORCDRC")
description = c("FAO 1988 classification system group", "Method of Walkley-Black (Org. matter = Org. C x 1.72)")
units = c("FAO 1988 classes", "permille")
detectionLimit = c(as.character(NA), "0.1")
# prepare a SoilProfileCollection:
prof1 <- join(data.frame(id, top, bottom, ORCDRC), data.frame(id, lon, lat, time, TAXNFAO8), type='inner')
depths(prof1) <- id ~ top + bottom
site(prof1) <- ~ lon + lat + time + TAXNFAO8 
coordinates(prof1) <- ~ lon + lat + time
proj4string(prof1) <- CRS("+proj=longlat +datum=WGS84")
# add measurement errors:
attr(prof1@horizons$ORCDRC, "measurementError") <- c(1.5, 0.5, 0.5, 0.5, 0.5, 0.5)
attr(prof1@sp@coords, "locationError") <- 1500
# add the metadata:
prof1@metadata <- data.frame(methodid, description, units, detectionLimit)
# convert to geosamples:
x <- as.geosamples(prof1)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
 x <- as.geosamples(prof1)
x
y <- as.geosamples(prof1)
  coordinates(y) <- ~longitude+latitude+altitude
coordinates(y@data) <- ~longitude+latitude+altitude
str(y@data)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
y <- as.geosamples(prof1)
coordinates(y@data) <- ~longitude+latitude+altitude
x = y@data
coordinates(x) <- ~longitude+latitude+altitude
str(x)
!any(y@data$altitudeMode == "relativeToGround")
  pnts = y@data
  coordinates(pnts) <- ~longitude+latitude
  proj4string(pnts) <- get("ref_CRS", envir = plotKML.opts) 
x = eberg_spc
x = eberg_spcs
  require(stats); require(graphics)
     ns(women$height, df = 5)
     summary(fm1 <- lm(weight ~ ns(height, df = 5), data = women))
     ## example of safe prediction
     plot(women, xlab = "Height (in)", ylab = "Weight (lb)")
     ht <- seq(57, 73, length.out = 200)
     lines(ht, predict(fm1, data.frame(height=ht)))
xl <- glm(observedValue~PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10+PC11+ns(altitude, df=4), SNDMHT.eberg, family=gaussian())
 plot(women, xlab = "Height (in)", ylab = "Weight (lb)")
lines(ht, predict(fm1, data.frame(height=ht)))
summary(fm1 <- lm(weight ~ ns(height, df = 5), data = women))
summary(fm1 <- lm(weight ~ ns(height, df = 3), data = women))
lines(ht, predict(fm1, data.frame(height=ht)))
scatter.smooth(SNDMHT.eberg$altitude, SNDMHT.eberg$observedValue)
str(afsp$sites)
?enc
??encoding
?iconv
afsp$sites$TAXNWRB <- iconv(afsp$sites$TAXNWRB, to="ASCII", "byte")
afsp$sites$TAXNWRB <- iconv(afsp$sites$TAXNWRB, to="ASCII", sub="byte")
afsp$sites$TAXNUSDA <- iconv(afsp$sites$TAXNUSDA, to="ASCII", sub="byte")
levels(afsp$sites$TAXNUSDA)
levels(as.factor(afsp$sites$TAXNUSDA))
afsp$sites$TAXNWRB <- as.factor(afsp$sites$TAXNWRB)
afsp$sites$TAXNUSDA <- as.factor(afsp$sites$TAXNUSDA)
save(afsp, file="afsp.rda", compress="xz")
wsp1 <- list(sites=sites[,c("SOURCEID", "LONWGS84", "LATWGS84", "TIMESTRR", "TAXNWRB", "TAXNUSDA")], horizons=horizons[,c("SOURCEID", "UHDICM", "LHDICM", "CRFVOL", "SNDPPT", "SLTPPT", "CLYPPT", "BLD", "PHIHO5", "PHIKCL", "ORCDRC")])
str(wsp1)
save(wsp1, file="../wsp1.rda", compress="xz")
Profiles <- read.dbf("AfSP011Qry_ISRIC/GIS_Dbf/AfSP01Qry_Profiles.dbf")
library(aqp)
library(GSIF)
Profiles <- read.dbf("AfSP011Qry_ISRIC/GIS_Dbf/AfSP01Qry_Profiles.dbf")
library(foreign)
Profiles <- read.dbf("AfSP011Qry_ISRIC/GIS_Dbf/AfSP01Qry_Profiles.dbf")
Profiles <- read.dbf("AfSP011Qry_ISRIC/GIS_Dbf/AfSP011Qry_Profiles.dbf")
Layers <- read.dbf("AfSP011Qry_ISRIC/GIS_Dbf/AfSP011Qry_Layers.dbf")
str(Profiles$dbf)
str(Profiles)
s.lst <- c("ProfileID", "Reliab", "X_LonDD", "Y_LatDD", "XYAccur", "T_Year", "WRB06", "WRB06rg", "FAO88", "USDA", "LocalCls")
h.lst <- c("ProfileID", "LayerNr", "UpDpth", "LowDpth", "HorDes", "ColorM", "ColorD", "FldTxtr", "CfPc", "Sand", "Silt", "Clay", "BlkDens", "PHH2O", "PHKCl", "OrgC", "TotalN", "Ecec", "Bsat", "CecSoil", "LabTxtr", "VolAWC")
summary(Profiles[,c("WRB06", "WRB06rg", "FAO88", "FAO74", "USDA")])
sites <- Profiles[!duplicated(Profiles$dbf$ProfileID),]
sites <- sites[!is.na(sites$X_LonDD)&!is.na(sites$Y_LatDD), s.lst]
sites$XYAccur <- ifelse(sites$XYAccur==-9999, NA, sites$XYAccur)
sites$T_Year <- as.Date(sites$T_Year)
?as.Date
summary(sites$T_Year)
sites <- Profiles[!duplicated(Profiles$ProfileID),]
sites <- sites[!is.na(sites$X_LonDD)&!is.na(sites$Y_LatDD), s.lst]
sites$XYAccur <- ifelse(sites$XYAccur==-9999, NA, sites$XYAccur)
sites$T_Year <- as.Date(sites$T_Year, )
str(sites$T_Year)
sites$T_Year <- as.Date(sites$T_Year, "%Y")
str(sites$T_Year)
summary(sites$T_Year)
sites$T_Year <- ifelse(sites$T_Year==-9999, NA, sites$T_Year)
sites$T_Year <- as.Date(sites$T_Year, "%Y")
sites$T_Year <- as.Date(sites$T_Year, "%y")
sites <- Profiles[!duplicated(Profiles$ProfileID),]
sites <- sites[!is.na(sites$X_LonDD)&!is.na(sites$Y_LatDD), s.lst]
sites$XYAccur <- ifelse(sites$XYAccur==-9999, NA, sites$XYAccur)
sites$T_Year <- ifelse(sites$T_Year==-9999, NA, sites$T_Year)
sites$T_Year <- as.Date(paste(sites$T_Year), format="%Y")
sites$WRB06[which(sites$WRB06=="NA")] <- NA
sites$WRB06rg[which(sites$WRB06rg=="NA")] <- NA
sites$FAO88[which(sites$FAO88=="NA")] <- NA
sites$USDA[which(sites$USDA=="NA")] <- NA
sites$LocalCls[which(sites$LocalCls=="NA")] <- NA
summary(!is.na(sites$WRB06rg))
summary(!is.na(sites$USDA))
summary(!is.na(sites$LocalCls))
str(sites)
horizons <- Layers[,h.lst]
horizons$LayerNr <- as.integer(horizons$LayerNr)
horizons$FldTxtr[which(horizons$FldTxtr=="NA")] <- NA
horizons$HorDes[which(horizons$HorDes=="NA")] <- NA
horizons$ColorM[which(horizons$ColorM=="NA")] <- NA
horizons$ColorD[which(horizons$ColorD=="NA")] <- NA
horizons$ColorM[which(horizons$ColorM=="<Null>")] <- NA
horizons$ColorD[which(horizons$ColorD=="<Null>")] <- NA
horizons$FldTxtr[which(horizons$FldTxtr=="NA")] <- NA
# replace "-9999":
for(j in c("CfPc", "Sand", "Silt", "Clay", "BlkDens", "PHH2O", "PHKCl", "OrgC", "TotalN", "Ecec", "Bsat", "CecSoil", "LabTxtr", "VolAWC")){
  horizons[,j] <- signif(ifelse(horizons[,j]==-9999, NA, horizons[,j]), 2)
}
str(horizons)
names(sites) <- c("SOURCEID", "RLBISRIC", "LONWGS84", "LATWGS84", "STDXYZ", "TIMESTRR","TAXNWRB", "TAXGWRB", "TAXNFAO", "TAXNUSDA", "TAXN")
names(horizons) <- c("SOURCEID", "LSQINT", "UHDICM", "LHDICM", "HZDFAO", "MCOMNS", "DCOMNS", "TEXMHT", "CRFVOL", "SNDPPT", "SLTPPT", "CLYPPT", "BLD", "PHIHO5", "PHIKCL", "ORCDRC", "NTO", "ECE", "BST", "CEC", "TEXMHL", "AWCIMM")
afsp <- list(sites=sites[,c("SOURCEID", "RLBISRIC", "LONWGS84", "LATWGS84", "STDXYZ", "TIMESTRR","TAXNWRB", "TAXNFAO", "TAXGWRB", "TAXNUSDA")], horizons=horizons[,c("SOURCEID", "LSQINT", "UHDICM", "LHDICM", "MCOMNS", "CRFVOL", "SNDPPT", "SLTPPT", "CLYPPT", "BLD", "PHIHO5", "PHIKCL", "ORCDRC", "CEC")])
str(afsp)
afsp$sites$TAXNWRB <- iconv(afsp$sites$TAXNWRB, to="ASCII", sub="byte")
afsp$sites$TAXNWRB <- as.factor(afsp$sites$TAXNWRB)
afsp$sites$TAXNUSDA <- iconv(afsp$sites$TAXNUSDA, to="ASCII", sub="byte")
afsp$sites$TAXNUSDA <- as.factor(afsp$sites$TAXNUSDA)
afsp$sites$TAXNFAO <- iconv(afsp$sites$TAXNFAO, to="ASCII", sub="byte")
afsp$sites$TAXNFAO <- as.factor(afsp$sites$TAXNFAO)
save(afsp, file="afsp.rda", compress="xz")
summary(afsp$sites$TAXNFAO)
load(file("http://gsif.isric.org/lib/exe/fetch.php?media=munsell_rgb.rdata"))
str(munsell_rgb)
str(munsell.rgb)
q()
library(aqp)
library(plyr)
site$SOURCEDB = "AfSPDB"
sites$SOURCEDB = "AfSPDB"
wsp1 <- list(sites=sites[,c("SOURCEID", "LONWGS84", "LATWGS84", "TIMESTRR", "TAXGWRB", "TAXNUSDA")], horizons=horizons[,c("SOURCEID", "UHDICM", "LHDICM", "CRFVOL", "SNDPPT", "SLTPPT", "CLYPPT", "BLD", "PHIHO5", "PHIKCL", "ORCDRC")])
rm(wsp1)
wsp10 <- list(sites=sites[,c("SOURCEID", "LONWGS84", "LATWGS84", "TIMESTRR", "TAXGWRB", "TAXNUSDA")], horizons=horizons[,c("SOURCEID", "UHDICM", "LHDICM", "CRFVOL", "SNDPPT", "SLTPPT", "CLYPPT", "BLD", "PHIHO5", "PHIKCL", "ORCDRC")])
str(wsp10)
wsp10 <- list(sites=sites[,c("SOURCEID", "LONWGS84", "LATWGS84", "TIMESTRR", "TAXGWRB", "TAXNUSDA")], horizons=horizons[,c("SOURCEID", "UHDICM", "LHDICM", "CRFVOL", "SNDPPT", "SLTPPT", "CLYPPT", "BLD", "PHIHO5", "PHIKCL", "ORCDRC", "CEC")])
str(wsp10)
save(wsp10, file="../wsp10.rda", compress="xz")
q()
library(aqp)
library(plyr)
library(foreign)
wsp10 <- list(sites=sites[,c("SOURCEID", "LONWGS84", "LATWGS84", "TIMESTRR", "TAXGWRB", "TAXNUSDA", "SOURCEDB")], horizons=horizons[,c("SOURCEID", "UHDICM", "LHDICM", "CRFVOL", "SNDPPT", "SLTPPT", "CLYPPT", "BLD", "PHIHO5", "PHIKCL", "ORCDRC", "CEC")])
str(wsp10)
save(wsp10, file="../wsp10.rda", compress="xz")
getwd()
q()
str(wsp10)
wsp10$sites$TAXGWRB <- as.character(wsp10$sites$TAXGWRB)
wsp10$sites$TAXNUSDA <- as.character(wsp10$sites$TAXNUSDA)
save(wsp10, file="D:/SPDB/wsp10.rda", compress="xz")
str(wsp10)
q()
source('C:/Roaming/Tinn-R/tmp/sgInfo.R')
startSocketServer(port=8889)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
wsp10extra <- list(sites=sites.m[,c("SOURCEID", "LONWGS84", "LATWGS84", "TIMESTRR", "TAXGWRB", "TAXNUSDA", "BDRICM", "SOURCEDB")], horizons=horizons[,c("SOURCEID", "UHDICM", "LHDICM", "CRFVOL", "SNDPPT", "SLTPPT", "CLYPPT", "BLD", "PHIHO5", "PHIKCL", "ORCDRC", "NTO", "ECE", "BST", "CEC", "TEXMHL", "AWCIMM")])
wsp10extra$sites$TAXGWRB <- as.character(wsp10extra$sites$TAXGWRB)
wsp10extra$sites$TAXNUSDA <- as.character(wsp10extra$sites$TAXNUSDA)
rm(wsp10extra)
afsis.leg <- list(sites=sites.m[,c("SOURCEID", "LONWGS84", "LATWGS84", "TIMESTRR", "TAXGWRB", "TAXNUSDA", "BDRICM", "SOURCEDB")], horizons=horizons[,c("SOURCEID", "UHDICM", "LHDICM", "CRFVOL", "SNDPPT", "SLTPPT", "CLYPPT", "BLD", "PHIHO5", "PHIKCL", "ORCDRC", "NTO", "ECE", "BST", "CEC", "TEXMHL", "AWCIMM")])
afsis.leg$sites$TAXGWRB <- as.character(afsis.leg$sites$TAXGWRB)
afsis.leg$sites$TAXNUSDA <- as.character(afsis.leg$sites$TAXNUSDA)
str(afsis.leg)
save(afsis.leg, file="D:/SPDB/afsis.leg.rda", compress="xz")
q()
